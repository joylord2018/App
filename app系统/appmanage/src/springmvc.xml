<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
	">
	<!-- name为请求路径 -->
	<!-- <bean name="/index.action" class="com.supermarket.controller.IndexController"></bean> -->
	<!-- 注解方法 -->
	<!-- 扫描注解 -->
	<context:component-scan base-package="com.app.controller"></context:component-scan>
	<!-- 声明使用mvc注解 -->
	<!-- 让springMVC忽略一下路径不进行视图解析添加前后缀的功能 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/"></property>
		<!-- 后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- location表示 本地静态资源所在目录， mapping静态资源映射到指定的路径-->
<!-- 	<mvc:resources location="/statics/" mapping="/statics/**"/> -->

	 <!--配置全局异常跳转地址  -->
	 <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">403</prop>
			</props>
		</property>
	</bean> 
	<!-- rest风格使用注解参数 -->
	<bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
	</bean>
	<!-- 设置上传文件属性 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200"></property>
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>
	<!-- 异步请求配置中文乱码 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
		<!-- HttpMessageConverter用来转换request的内容到一定格式，转换输出的内容到response -->
			<!-- 下载配置 -->
			<!-- <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/> -->
			<!-- 配置json格式类型参出转换 -->
			<!-- 将响应信息转换为string类型 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- 当响应格式为json时采用uft-8编码格式 -->
						<value>application/json;charset=utf-8</value>
					</list>
				</property>
			</bean>
			<!-- 将请求的响应类型转化为json格式 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
			<!-- 支持的媒体类型 -->
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=utf-8</value>
						<value>application/json;charset=utf-8</value>
						<value>text/json;charset=utf-8</value>
					</list>
				</property>
				<!-- 时间格式的json -->
				<property name="dateFormat" value="yyyy-MM-dd hh:mm:ss"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!--管理员拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/backend/**"/>
			<bean class="com.app.util.Backendinterceptors"/>
		</mvc:interceptor>
		<!--开发者拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/developer/**"/>
			<bean class="com.app.util.Devinterceptors"/>
		</mvc:interceptor>
		<!-- 先按顺序调用preHandle方法再逆序调用每个拦截器的postHandle和afterCompletion -->
	</mvc:interceptors>
	</beans>